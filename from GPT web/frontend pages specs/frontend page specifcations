- ContradictionsPage specs
    
    **ContradictionsPage — File Location: `/pages/ContradictionsPage.js`**
    
    ---
    
    ### **1. Primary Role**
    
    A dynamic interface to track, analyze, and explore contradictions as they evolve historically and interact with other core elements (events, struggles, structures, entities).
    
    ---
    
    ### **2. Sheets Used**
    
    - **Contradictions Sheet**
    - **Events Sheet**
    - **Struggles Sheet**
    - **Entities Sheet**
    - **Structures Sheet**
    
    ---
    
    ### **3. Data Relationships**
    
    - Each **contradiction** is linked to:
        - Multiple **events** (via `contradiction_id` tag)
        - One or more **structures** (economic, political, social, cultural)
        - **Struggles** that emerge from it
        - **Entities** that take stances within related events
    
    ---
    
    ### **4. Layout**
    
    - **Header:** Overview & explanation of contradiction levels (Principal, Secondary, Tertiary)
    - **Left Sidebar:** Filter by intensity (Latent → Explosive), structure, sector, region
    - **Main Panel:**
        - Active Contradictions (current phase)
        - Contradiction timeline preview (mini-scroll view)
        - Related struggles and events summary
    - **Right Panel (Optional):** Entity stances + structure mappings
    
    ---
    
    ### **5. Component Breakdown**
    
    - `ContradictionCard` — Summary + tags + current phase
    - `ContradictionTimelineMini` — Horizontal scroll showing escalation over time
    - `LinkedStrugglesList` — Displays related struggles
    - `EntityStanceCluster` — Mini-map of who took which stance
    - `ContradictionDetailModal` — Opens full view when clicked
    
    ---
    
    ### **6. Component Behavior**
    
    - Clicking a contradiction opens modal with full historical motion
    - Timeline expands on hover or click
    - Filters apply across all components in real-time
    - Mini components collapse/expand to preserve layout space
    
    ---
    
    ### **7. Interaction Flows**
    
    - User lands on page → Sees active contradictions sorted by intensity
    - Clicks one → Opens contradiction detail modal
    - Inside modal:
        - Timeline view
        - Linked struggles section
        - Entity stance map
        - Structural basis summary
    
    ---
    
    ### **8. Key UI Behavior**
    
    - Highlighting Principal Contradiction at the top
    - Responsive interaction between filters and contradiction display
    - Time-based escalation indicators (color-coded phase shifts)
    
    ---
    
    ### **9. Visual Design Guidelines**
    
    - Use **color-coded intensity chips** (e.g., gray = latent, red = explosive)
    - Rounded containers for contradiction cards
    - Highlight active contradiction with badge + glow
    - Use **iconography** for structures (economy = factory icon, political = gavel, etc.)
    
    ---
    
    ### **10. Empty States**
    
    - "No contradictions found in this category" (with explore other elements CTA)
    - Empty contradiction → “This contradiction hasn’t been expressed through events yet.”
    
    ---
    
    ### **11. Performance Considerations**
    
    - Use lazy loading for contradiction timelines
    - Paginate contradiction cards
    - Preload stances + struggles on hover for faster modals
    
    ---
    
    ### **12. Versioning & Iteration Plans**
    
    - v1.0 = Manual contradiction selection + static linkage
    - v1.1 = Add Principal Contradiction justification system
    - v1.2+ = Real-time contradiction updates (post Phase 3)
    
    ---
    
    ### **13. Test Criteria**
    
    - Clicking a contradiction loads accurate modal with linked events
    - Filters work across all intensity levels and sectors
    - Principal Contradiction shows only when justified
    - Stances match entity-event linkage from backend
    
    ---
    
    ### **14. Mobile-First Design Considerations**
    
    - Collapsible filters
    - Modal opens as a full-page slide-over
    - Horizontal scroll timelines collapse into stacked cards
    
    ---
    
    ### **15. Integration Points**
    
    - Linked from homepage (Principal Contradiction section)
    - Contradictions show up in Issue Cards, Entity Profiles, and Struggles View
    
    ---
    
    ### **16. Integration with Narrative System (Future)**
    
    - Placeholder section for tracking narrative and counter-narrative evolution once Materialist Ontology is updated
    - Will connect to **Theory Objects + Theory Instances** when integrated
- TimelinePage specs
    
    **TimelinePage — File Location: `/pages/TimelinePage.js`**
    
    ---
    
    ### **1. Primary Role**
    
    To provide users with a chronological view of historical motion as expressed through events. The page acts as an interactive timeline that highlights how contradictions unfold, how entities shift stances, and how struggles intensify or de-escalate over time.
    
    ---
    
    ### **2. Sheets Used**
    
    - **Events Sheet**
    - **Issues Sheet**
    - **Entities Sheet**
    - **Struggles Sheet**
    - **Contradictions Sheet**
    
    ---
    
    ### **3. Data Relationships**
    
    - Each **event** is:
        - Optionally linked to an **issue** (via `issue_id`)
        - Linked to an **entity** (via `entity_id`) for stance-revealing purposes
        - Optionally linked to a **contradiction** (via `contradiction_id`)
        - Linked to a **struggle** (if part of an ongoing or historic movement)
        - Optionally linked to **parent_event_id** and **update_event_id** for chronological threading
    
    ---
    
    ### **4. Layout**
    
    - **Header:** Page intro + timeline filters (region, type, entity, contradiction, etc.)
    - **Timeline View (Main Panel):** Chronological flow of events
    - **Side Panel (Optional):** Active filters, quick links to pinned issues or contradictions
    
    ---
    
    ### **5. Component Breakdown**
    
    - `TimelineEventCard` — Shows title, timestamp, entities involved, stance tags, contradiction tag
    - `TimelineThreadConnector` — Renders visual linkages between parent → update events
    - `IssueBadge` — Optional mini tag if linked to an issue
    - `EntityMiniCard` — Visuals for who took stance in event
    - `ContradictionIntensityDot` — Visual cue of contradiction status at time of event
    
    ---
    
    ### **6. Component Behavior**
    
    - Scrollable chronological interface with infinite scroll
    - Threaded events grouped by parent → update chains
    - Hovering over contradiction tag shows intensity level
    - Clicking an event opens full detail modal
    
    ---
    
    ### **7. Interaction Flows**
    
    - User lands → Sees most recent events
    - Applies filter (e.g., contradiction = Caste in Tamil Nadu)
    - Timeline dynamically narrows to show related historical chain
    - Clicking an event shows entity stances, contradiction linkage, and related issue/struggle
    
    ---
    
    ### **8. Key UI Behavior**
    
    - Color-coded events by contradiction status
    - Threaded event chains (visually linked updates)
    - Stance reveal icons auto-aligned to entity profile links
    
    ---
    
    ### **9. Visual Design Guidelines**
    
    - Neutral background with bold event cards
    - Faint lines for parent → update relationships
    - Accent colors for stance (red = opposition, green = support, yellow = shift)
    - Icons for contradictions and issues should be distinct
    
    ---
    
    ### **10. Empty States**
    
    - No events: “No events match these filters yet.”
    - Event with no contradiction: “No contradiction tagged — yet to be linked.”
    
    ---
    
    ### **11. Performance Considerations**
    
    - Infinite scroll with virtualized rendering
    - Load timeline in batches by date ranges
    - Cache filter queries for smoother back-navigation
    
    ---
    
    ### **12. Versioning & Iteration Plans**
    
    - v1.0: Static timeline using existing Events Sheet
    - v1.1: Add contradiction-based color coding and entity stance reveal
    - v1.2+: Threaded event logic (parent → update)
    - v1.3+: Future real-time event ingestion system
    
    ---
    
    ### **13. Test Criteria**
    
    - Filtering by contradiction/issue/region returns correct event sets
    - Event modal loads correct linked data (entities, contradiction, struggle)
    - Threaded updates display in correct sequence
    
    ---
    
    ### **14. Mobile-First Design Considerations**
    
    - Vertical stacking of events
    - Swipe-based timeline navigation
    - Filter drawer for smaller screens
    
    ---
    
    ### **15. Integration Points**
    
    - Direct link from homepage timeline widget
    - Linked from Contradiction Page → "View Timeline of Events"
    - Linked from Entity and Issue Cards
    
    ---
    
    ### **16. Future Integrations**
    
    - Real-time event ingestion (via automation or API)
    - Integration with Polygraph for stance dynamics visualization
    - Narrative shift overlays (based on Theory Instances)
- StructuresPage specs
    
    **StructuresPage — File Location: `/pages/StructuresPage.js`**
    
    ---
    
    ### **1. Primary Role**
    
    To map the material structures (economic, political, social, cultural) that underlie and generate contradictions. The page acts as an anchor to reveal how structures evolve historically, how they condition struggles, and how contradictions emerge from them.
    
    ---
    
    ### **2. Sheets Used**
    
    - **Structures Sheet**
    - **Contradictions Sheet**
    - **Struggles Sheet**
    - **Events Sheet**
    
    ---
    
    ### **3. Data Relationships**
    
    - Each **structure** is linked to:
        - One or more **contradictions** that emerge from it
        - One or more **struggles** challenging it
        - Multiple **events** that express or reinforce it
    
    ---
    
    ### **4. Layout**
    
    - **Header:** Overview + filters by structure type
    - **Four Column Grid:** Economic, Political, Social, Cultural
    - **Cards Under Each Column:** One for each structure entry
    - **Right Side Panel:** (optional) displays linked contradictions + active struggles for selected structure
    
    ---
    
    ### **5. Component Breakdown**
    
    - `StructureCard` — Displays title, type, abstract, and timeline link
    - `ContradictionListMini` — List of contradictions linked to that structure
    - `StruggleListMini` — Highlights key struggles emerging from that structure
    - `StructureDetailModal` — Opens a deep-dive view with event timeline, history, linked contradictions/struggles
    
    ---
    
    ### **6. Component Behavior**
    
    - Clicking a structure opens full modal with all linkages
    - Filters update visible structures by type or region
    - Hovering over contradiction shows current intensity phase
    - Struggles dynamically sort by scale or sector
    
    ---
    
    ### **7. Interaction Flows**
    
    - User lands on page → Chooses a structure type or scans all
    - Clicks a structure card → Modal opens with contradictions, struggles, events
    - May click through to full contradiction or struggle page
    
    ---
    
    ### **8. Key UI Behavior**
    
    - Structures visually segmented by type (color-coded column headers)
    - Contradictions and struggles load in real time inside modal
    - Clear directional flow: Structure → Contradiction → Struggle → Event
    
    ---
    
    ### **9. Visual Design Guidelines**
    
    - Use muted background tones with strong accent colors for structure types
    - Contradiction and struggle links use pills or badges with tooltips
    - Cards use icons for structure type (factory = economic, court = political, etc.)
    
    ---
    
    ### **10. Empty States**
    
    - No linked contradiction: “No contradictions recorded yet — update from event sheets.”
    - No active struggles: “No struggles currently contesting this structure.”
    
    ---
    
    ### **11. Performance Considerations**
    
    - Paginate or virtualize structure card rendering
    - Load linked contradictions/struggles asynchronously
    
    ---
    
    ### **12. Versioning & Iteration Plans**
    
    - v1.0 = Static structure display with contradiction/struggle linking
    - v1.1 = Add structure timeline (how it changed over time)
    - v1.2 = Integrate structure-based filters across other pages
    
    ---
    
    ### **13. Test Criteria**
    
    - Clicking a structure loads correct contradictions and struggles
    - Contradictions link to valid contradiction entries with phase info
    - Empty structures show accurate messages
    
    ---
    
    ### **14. Mobile-First Design Considerations**
    
    - Vertical stacking by structure type
    - Structure modal expands full screen
    - Slide-in filters for small screens
    
    ---
    
    ### **15. Integration Points**
    
    - Linked from Contradictions Page (“Structural Basis” section)
    - Linked from Struggles Page (structures being contested)
    - Homepage modules may show featured structures during key events
    
    ---
    
    ### **16. Future Integrations**
    
    - Structural reproduction cycle mapping (e.g., how caste or capital perpetuates itself)
    - Narrative overlays on structural myths (pending materialist ontology update)
    - AI-assist for identifying structures embedded in events
- StrugglesPage specs
    
    **StrugglesPage — File Location: `/pages/StrugglesPage.js`**
    
    ---
    
    ### **1. Primary Role**
    
    To explore, categorize, and track struggles that emerge from contradictions and play out historically through events. It provides users a way to understand how organized resistance forms, escalates, diversifies, or is suppressed.
    
    ---
    
    ### **2. Sheets Used**
    
    - **Struggles Sheet**
    - **Events Sheet**
    - **Contradictions Sheet**
    - **Structures Sheet**
    - **Entities Sheet**
    
    ---
    
    ### **3. Data Relationships**
    
    - Each **struggle** is linked to:
        - One or more **contradictions** that gave rise to it
        - A sequence of **events** that express it historically
        - A set of **entities** involved in supporting, co-opting, or resisting it
        - One or more **structures** it contests
    
    ---
    
    ### **4. Layout**
    
    - **Header:** Overview + filters by form, scale, sector, status
    - **Main Panel:** Grid or stacked layout of active and historical struggles
    - **Detail Drawer or Modal:** Opens to show deep dive for each struggle
    
    ---
    
    ### **5. Component Breakdown**
    
    - `StruggleCard` — Displays title, type (form), status (active/suppressed/victorious), summary
    - `LinkedContradictionsBar` — Badges of contradictions related to the struggle
    - `EventThreadMini` — Mini timeline of major events
    - `EntityInvolvementTags` — Entities with roles (support/resist/co-opt)
    - `StructureImpactSummary` — What structures the struggle seeks to transform
    
    ---
    
    ### **6. Component Behavior**
    
    - Clicking on a struggle expands a modal or drawer with:
        - Chronological event history
        - Contradiction triggers
        - Entity alignments
        - Structural contestation
    - Filters update struggle display in real time
    
    ---
    
    ### **7. Interaction Flows**
    
    - User lands → Explores active struggles or filters by form (e.g., electoral, protest, legal)
    - Clicks on a struggle card → Sees full linked contradiction, events, and structure map
    - May jump to timeline view or contradiction detail
    
    ---
    
    ### **8. Key UI Behavior**
    
    - Dynamic filtering by form/scale/sector
    - Color-coded status chips (active, paused, suppressed, historic, victorious)
    - Hover reveals contradiction intensities or entity tags
    
    ---
    
    ### **9. Visual Design Guidelines**
    
    - Grid view with section headers for status
    - Icons for form (flag = protest, ballot = electoral, book = legal, etc.)
    - Event timeline as a compressed visual line inside each struggle card
    
    ---
    
    ### **10. Empty States**
    
    - No struggles match filter → "No struggles found in this category. Try different filters."
    - Struggle with no contradiction → "Awaiting contradiction linkage."
    
    ---
    
    ### **11. Performance Considerations**
    
    - Virtualized scroll for long lists
    - Modal content loads lazily
    - Filters debounce queries
    
    ---
    
    ### **12. Versioning & Iteration Plans**
    
    - v1.0 = Static page, filtered by sheet values
    - v1.1 = Timeline-threaded struggles with event linkage
    - v1.2 = Struggle heatmaps by region or sector
    - v1.3+ = Dynamic escalation indicators (linked to contradiction phase shifts)
    
    ---
    
    ### **13. Test Criteria**
    
    - All struggle metadata renders correctly
    - Filters return valid struggle sets
    - Contradiction and structure linkage is accurate
    - Entity role tagging is consistent with event data
    
    ---
    
    ### **14. Mobile-First Design Considerations**
    
    - Struggles shown in vertical card stack
    - Drawer-based detail view
    - Sticky filter bar with condensed chips
    
    ---
    
    ### **15. Integration Points**
    
    - Linked from Contradiction and Structures Pages
    - Appears in Entity Profile views (struggles participated in)
    - Filters shared with TimelinePage and ReportingPage
    
    ---
    
    ### **16. Future Integrations**
    
    - Struggle genealogy mapping (how one struggle inspires or mutates into another)
    - Power metrics overlay (momentum, repression level, public support)
    - Polygraph integration for stance breakdowns by class, caste, institution
- WikiPage specs
    
    **WikiPage (Entity Profiles View) — File Location: `/pages/WikiPage.js`**
    
    ---
    
    ### **1. Primary Role**
    
    To provide a contradiction-aware, struggle-linked profile view of all key entities (political parties, movements, institutions, corporations, etc.). It serves as a dialectical wiki that maps each entity’s material role across events, structures, and struggles.
    
    ---
    
    ### **2. Sheets Used**
    
    - **Entities Sheet**
    - **Events Sheet**
    - **Contradictions Sheet**
    - **Struggles Sheet**
    - **Structures Sheet**
    
    ---
    
    ### **3. Data Relationships**
    
    - Each entity profile is linked to:
        - Events where the entity revealed a **stance**
        - Contradictions the entity is materially involved in
        - Struggles where the entity supported, co-opted, or resisted
        - Structures that condition or are challenged by the entity
    
    ---
    
    ### **4. Layout**
    
    - **Header:** Entity name, type, logo/icon, abstract
    - **Entity Profile Card Grid:** Modular display of all entities (Political Parties, Movements, Institutions, etc.)
    - **Sidebar (or modal drawer):** Opens selected entity’s detailed profile view
    
    ---
    
    ### **5. Component Breakdown**
    
    - `EntityCard` — Thumbnail, stance tags, type icon, brief descriptor
    - `ContradictionClusterMini` — Summary of linked contradictions
    - `StruggleParticipationTags` — Tags with type of involvement (support/co-opt/resist)
    - `StanceRevealTimelineMini` — Timeline of stance-revealing events
    - `StructureContextMap` — What structures the entity upholds, contests, or reshapes
    
    ---
    
    ### **6. Component Behavior**
    
    - Clicking an `EntityCard` opens full profile view
    - Modal/tab view shows contradiction involvement, timeline of stances, and struggle history
    - Filters by entity type, contradiction involvement, region
    
    ---
    
    ### **7. Interaction Flows**
    
    - User selects an entity type (e.g., Political Parties)
    - Views cards → Selects DMK → Full modal with:
        - Contradictions DMK is embedded in
        - Timeline of event-based stances
        - Struggles they engaged in or blocked
        - Structures they are materially linked to
    
    ---
    
    ### **8. Key UI Behavior**
    
    - Dynamic contradiction tag rendering with phase indicators
    - Timeline dots linked to events
    - Struggle tags show role + date span (e.g., supported 2017–2020)
    - Structure tags show relation (uphold/contest/reproduce)
    
    ---
    
    ### **9. Visual Design Guidelines**
    
    - Entity icons by category (building = institution, raised fist = movement, etc.)
    - Contradiction color dots (phase-coded)
    - Timeline as horizontal scroll with icons for major shifts
    
    ---
    
    ### **10. Empty States**
    
    - No contradiction involvement: “No contradictions recorded yet — update through events.”
    - No struggle links: “No struggle participation detected — entity may be passive.”
    
    ---
    
    ### **11. Performance Considerations**
    
    - Load cards in virtual scroll grid
    - Modal data loads asynchronously
    - Cache stance timelines for faster modal switching
    
    ---
    
    ### **12. Versioning & Iteration Plans**
    
    - v1.0 = Static entity profiles with stance/event linking
    - v1.1 = Add contradiction + struggle linkages
    - v1.2 = Show narrative positioning once narrative model is live
    
    ---
    
    ### **13. Test Criteria**
    
    - Entity profile opens with accurate contradiction and struggle mappings
    - Event stances render correctly with linked timeline
    - Filters return valid subsets by type and contradiction involvement
    
    ---
    
    ### **14. Mobile-First Design Considerations**
    
    - Vertical stack of EntityCards
    - Profile modal as full-page overlay
    - Swipeable stance timelines
    
    ---
    
    ### **15. Integration Points**
    
    - Linked from: Events, Contradictions, and Struggles pages
    - Entities also appear in Stance Tracking modules and ReportingPage
    
    ---
    
    ### **16. Future Integrations**
    
    - Narrative alignment overlays (post Theory Sheet integration)
    - Polygraph integration for public-private contradiction mapping
    - Entity comparison view (e.g., BJP vs. DMK across contradictions and struggles)
- OpsDashboardPage specs
    
    **OpsDashboardPage — File Location: `/pages/OpsDashboardPage.js`**
    
    ---
    
    ### **1. Primary Role**
    
    To provide a centralized control and tracking interface for the operational state of Zoomout. The dashboard gives the builder (you) a bird’s-eye view over sheet status, form integrity, schema syncing, and changelog consistency.
    
    ---
    
    ### **2. Sheets Used**
    
    - All Sheets (read-only summary)
    - Changelog (Living Changelog)
    - Framework for Logging (referenced)
    - Form structure references (for QA against schema)
    
    ---
    
    ### **3. Data Relationships**
    
    - Cross-validates forms → sheets
    - Flags inconsistencies in sheet headers or missing fields
    - Links changelog entries to their related entities/pages (if tagged)
    
    ---
    
    ### **4. Layout**
    
    - **Header:** Zoomout Ops Overview
    - **Top Module:** Completion Progress across all sheets (Entities, Events, Issues, etc.)
    - **Middle Panel:** Section-wise QA (Forms, Schema Sync, Sheet Activity)
    - **Lower Panel:** Living Changelog stream + update logging UI (manual)
    
    ---
    
    ### **5. Component Breakdown**
    
    - `SheetStatusTable` — Live status of field population
    - `FormQASection` — Lists forms with errors, missing fields, or mismatches
    - `SchemaDriftDetector` — Compares current vs. expected field structures
    - `ChangelogStream` — Scrollable feed of logs with tags (e.g., contradiction, structures)
    - `AddLogEntryForm` — Interface to submit new log entries to Living Changelog
    
    ---
    
    ### **6. Component Behavior**
    
    - Auto-scans sheets on page load
    - Real-time QA against saved schema templates
    - Manual changelog entries accepted and time-stamped
    
    ---
    
    ### **7. Interaction Flows**
    
    - Builder lands → Sees % completion across sheets
    - Reviews flagged issues in forms and schema
    - Adds a new entry to Living Changelog
    - Clicks log tags to navigate to affected pages
    
    ---
    
    ### **8. Key UI Behavior**
    
    - Flag color coding (red = critical mismatch, yellow = warning, green = pass)
    - Live sheet scanning indicator
    - Pinned log entries for major milestones
    
    ---
    
    ### **9. Visual Design Guidelines**
    
    - Clean, minimal UI with dashboard card layout
    - Icons for each core sheet (Entities, Contradictions, etc.)
    - Use monospace font for schema debugging sections
    
    ---
    
    ### **10. Empty States**
    
    - No errors: “All systems aligned with schema.”
    - No changelog yet: “No progress logged. Add your first milestone.”
    
    ---
    
    ### **11. Performance Considerations**
    
    - Cache sheet scans for a short duration to reduce load
    - Debounce schema validation checks on update
    
    ---
    
    ### **12. Versioning & Iteration Plans**
    
    - v1.0 = Manual schema comparison and changelog logging
    - v1.1 = Schema template saving + validation engine
    - v1.2 = Suggested auto-log generator based on form edits
    
    ---
    
    ### **13. Test Criteria**
    
    - Field mismatch alerts show correctly
    - Log entries persist and are timestamped
    - Clicking tags links to valid page specs or entities
    
    ---
    
    ### **14. Mobile-First Design Considerations**
    
    - Collapse dashboard into modules with toggles
    - Log entry drawer opens fullscreen on mobile
    
    ---
    
    ### **15. Integration Points**
    
    - Linked from sidebar only (restricted access view)
    - Pulls from forms QA layer and changelog store
    
    ---
    
    ### **16. Future Integrations**
    
    - Automated dev-to-sheet sync diff viewer
    - Logging AI-generated summaries from Polygraph
    - QA suggestions based on usage patterns and stale entries
- PolygraphPage specs
    
    **PolygraphPage — File Location: `/pages/PolygraphPage.js`**
    
    ---
    
    ### **1. Primary Role**
    
    To visualize and analyze stance dynamics across entities in relation to contradictions, issues, and events. Polygraph provides a multi-dimensional matrix of who stands where, how positions shift over time, and where class/caste/power alignments lie.
    
    ---
    
    ### **2. Sheets Used**
    
    - **Events Sheet**
    - **Entities Sheet**
    - **Issues Sheet**
    - **Contradictions Sheet**
    
    ---
    
    ### **3. Data Relationships**
    
    - Each **stance** is logged in an event and tied to:
        - One or more **entities** (via `entity_id`)
        - A specific **issue** (via `issue_id`)
        - Optionally a **contradiction** (via `contradiction_id`)
    - Polygraph visualizes the multi-axis relationship between these variables
    
    ---
    
    ### **4. Layout**
    
    - **Header:** Overview of stance dynamics + filtering panel
    - **Main Panel:** Dynamic grid/matrix visualization
        - Columns: Entities
        - Rows: Issues / Contradictions
        - Cells: Stance positions with color-coded directionality
    - **Timeline Slider (Optional):** See stance changes over time
    
    ---
    
    ### **5. Component Breakdown**
    
    - `StanceMatrix` — Core heatmap-like matrix showing entity stances across contradictions/issues
    - `EntityColumnHeader` — Entity mini profile
    - `IssueRowLabel` — Linked to issue and contradiction
    - `StanceChip` — Visual tag (support/oppose/neutral/shifted/absent)
    - `StanceDetailModal` — Shows the events that revealed this stance
    
    ---
    
    ### **6. Component Behavior**
    
    - Hovering a cell shows the last event where stance was revealed
    - Clicking a stance chip opens event modal
    - Timeline slider rewires the matrix based on date (for historical stance motion)
    - Filters re-render grid based on sectors, regions, or entity types
    
    ---
    
    ### **7. Interaction Flows**
    
    - User filters by contradiction or issue
    - Matrix updates to show stance positions of all major entities
    - Timeline is dragged to 2022 → Matrix shifts to show 2022 stances
    - Clicking a stance opens the event and contradiction it was logged in
    
    ---
    
    ### **8. Key UI Behavior**
    
    - Heatmap coloring for stance density / consistency
    - Animated stance-shift trails over time
    - Highlighted cells for contradiction-defining events
    
    ---
    
    ### **9. Visual Design Guidelines**
    
    - Matrix grid with light background, bold axis labels
    - Stance chips: Green = Support, Red = Oppose, Yellow = Shift, Gray = Neutral, Hollow = Absent
    - Mini timeline dots inside stance chips if historical motion exists
    
    ---
    
    ### **10. Empty States**
    
    - No stance found: “No stance recorded yet — check related events.”
    - Entity hasn’t acted on issue: “No engagement detected.”
    
    ---
    
    ### **11. Performance Considerations**
    
    - Only load visible grid chunks (virtualized matrix)
    - Cache matrix per timeline state for fast switching
    - Modal pre-fetch stance-related events
    
    ---
    
    ### **12. Versioning & Iteration Plans**
    
    - v1.0 = Static matrix with filters and modal links
    - v1.1 = Add timeline slider and stance shift animation
    - v1.2 = Heatmaps of ideological cohesion/divergence by sector
    
    ---
    
    ### **13. Test Criteria**
    
    - Entity stances align with Events Sheet
    - Clicking chips shows accurate event info
    - Filters and timeline slider behave consistently
    
    ---
    
    ### **14. Mobile-First Design Considerations**
    
    - Condensed matrix with swipe navigation
    - Vertical entity stacking
    - Timeline slider as horizontal scroll under matrix
    
    ---
    
    ### **15. Integration Points**
    
    - Pulls data from Events Sheet stance logic
    - Linked from Entity Profile pages ("View stance matrix")
    - Appears in ReportingPage for contradiction-centric analysis
    
    ---
    
    ### **16. Future Integrations**
    
    - AI-generated stance shift summaries
    - Public-private alignment analysis (class + institutional bias mapping)
    - Narrative alignment overlays (via Theory Instances)